@using LSSD.Bookings;

@code {

    [Inject]
    ResourceService _repository { get; set; }

    [Inject]
    ResourceGroupService _groupRepository { get; set; }

    [Inject]
    NavigationManager NavigationManager { get; set; }

    [Parameter]
    public Resource Resource { get; set; } = null;

    [Parameter]
    public bool CreateNew { get; set; } = false;

    [Parameter]
    public string BackRoute { get; set; } = "";

    ResourceGroup thisResourceGroup = new ResourceGroup();
    
    string newViewGroupString;
    string newEditGroupString;

    protected void HandleValidSubmit()
    {
        saveData();
    }

    protected void HandleInValidSubmit()
    {
        saveData();
    }

    private void saveData()
    {
        // Save the resource via the service
        _repository.Update(Resource);
        NavigationManager.NavigateTo(BackRoute);
    }

    protected override void OnInitialized()
    {
        if (CreateNew) {
            Resource = new Resource()
            {
                Id = new Guid(),
                Name = "New Resource",
                Description = "",
                IsEnabled = true
            };
        }
    }

    protected void OnClick_Cancel()
    {
        // Go back
        NavigationManager.NavigateTo(BackRoute);
    }

    protected void OnClick_RemoveViewGroup(string GroupId)
    {
        if (!string.IsNullOrEmpty(GroupId)) {
            this.Resource.OIDC_CanViewResource.Remove(GroupId);
        }
    }

    protected void OnClick_RemoveEditGroup(string GroupId)
    {
        if (!string.IsNullOrEmpty(GroupId)) {
            this.Resource.OIDC_CanEditBookings.Remove(GroupId);
        }
    }

    protected void OnClick_AddViewGroup(string GroupId)
    {
        if (!string.IsNullOrEmpty(GroupId)) {            
            this.Resource.OIDC_CanViewResource.Add(GroupId);
        }
    }

    protected void OnClick_AddEditGroup(string GroupId)
    {
        if (!string.IsNullOrEmpty(GroupId)) {
            this.Resource.OIDC_CanEditBookings.Add(GroupId);
        }
    }
}

<div class="container">

@if(Resource != null) {
    <EditForm Model="@Resource" OnValidSubmit="@HandleValidSubmit" OnInvalidSubmit="@HandleInValidSubmit">
    <div class="form-group">
        <div class="row">
            <div class="col-sm-3">ID</div>
            <div class="col-sm-6">@Resource.Id.ToString()</div>
        </div>
        <div class="form-group row">
            <label for="resourceName" class="col-sm-3">Name: </label>
            <InputText id="resourceName" class="form-control col-sm-8" @bind-Value="@Resource.Name"></InputText>
            <ValidationMessage class="offset-sm-3 col-sm-68" For="@(() => Resource.Name)" />
        </div>
        <div class="form-group row">
            <label for="resourceDefaultBookingMinutes" class="col-sm-3">Default booking minutes: </label>
            <InputNumber id="resourceDefaultBookingMinutes" class="form-control col-sm-8" @bind-Value="@Resource.DefaultBookingMinutes"></InputNumber>
            <ValidationMessage class="offset-sm-3 col-sm-68" For="@(() => Resource.DefaultBookingMinutes)" />
        </div>
        <div class="form-group row">
            <label for="resourceDescription" class="col-sm-3">Description: </label>
            <InputTextArea  id="resourceDescription" class="form-control col-sm-8" @bind-Value="@Resource.Description"></InputTextArea>
            <ValidationMessage class="offset-sm-3 col-sm-68" For="@(() => Resource.Description)" />
        </div>
        <div class="form-group row">
            <label for="resourceGroup" class="col-sm-3">Resource Group: </label>
            <InputSelect  id="resourceGroup" class="form-control col-sm-8" @bind-Value="@Resource.GroupGUID">
                <option value="@(new Guid())">-</option>
                @foreach (ResourceGroup grp in _groupRepository.GetAll())
                {
                    <option value="@(grp.Id)">@(grp.Name)</option>
                }
            </InputSelect>
            <ValidationMessage class="offset-sm-3 col-sm-68" For="@(() => Resource.GroupGUID)" />
        </div>

        <div class="form-group row">
            <label for="oidcView" class="col-sm-3">OIDC Group IDs - Can view: </label>
        </div>
        <div class="form-group row">
        
            @if (Resource.OIDC_CanViewResource.Count > 0) {
                @foreach(string groupid in Resource.OIDC_CanViewResource) {
                    <div class="offset-sm-1 col-sm-8">
                        <span>@groupid</span>
                        <button type="button" @onclick="@(() => OnClick_RemoveViewGroup(groupid))" class="btn btn-link">Remove</button>
                    </div>
                }           
            } else {
                <div class="offset-sm-1 col-sm-8"><i>Any user / no security restrictions</i></div>
            }
            
            <InputText id="oidcView" class="form-control offset-sm-1  col-sm-10" @bind-Value="@newViewGroupString"></InputText>
            <button type="button" @onclick="@(() => OnClick_AddViewGroup(newViewGroupString))" class="btn btn-link">Add</button>

        </div>
        
        <div class="form-group row">
            <label for="oidcEdit" class="col-sm-3">OIDC Group IDs - Can edit/cancel: </label>
        </div>
        <div class="form-group row">
            @if (Resource.OIDC_CanEditBookings.Count > 0) {
                @foreach(string groupid in Resource.OIDC_CanEditBookings) {
                    <div class="offset-sm-1 col-sm-8">
                        <span>@groupid</span>
                        <button type="button" @onclick="@(() => OnClick_RemoveEditGroup(groupid))" class="btn btn-link">Remove</button>
                    </div>
                }           
            } else {
                <div class="offset-sm-1 col-sm-8"><i>Any user / no security restrictions</i></div>
            }
            
            <InputText id="oidcEdit" class="form-control offset-sm-1 col-sm-10" @bind-Value="@newEditGroupString"></InputText>
            <button type="button" @onclick="@(() => OnClick_AddEditGroup(newEditGroupString))" class="btn btn-link">Add</button>

        </div>        

        <div class="form-row">
            <div class="col-sm-3">
                Resource is enabled?
            </div>
            <div class="col-sm-8">
                <InputCheckbox id="resourceEnabled" @bind-Value="@Resource.IsEnabled"></InputCheckbox>                
                <ValidationMessage class="offset-sm-3 col-sm-8" For="@(() => Resource.IsEnabled)" />
            </div>
        </div>
    </div>
    <div class="form-group">
        <div class="form-row">
            <div class="col">
                <button type="submit" class="btn btn-primary btn-block">Save</button>
            </div>
            @if (!string.IsNullOrEmpty(BackRoute))
            {
            <div class="col">
                <button type="button" @onclick="OnClick_Cancel" class="btn btn-secondary btn-block">Cancel</button>
            </div>
            }
        </div>
    </div>
</EditForm>

} else {
    <i>Null resource</i>
}
</div>